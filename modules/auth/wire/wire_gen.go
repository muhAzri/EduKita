// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"EduKita/modules/auth/data/repositories"
	"EduKita/modules/auth/domain/usecases"
	"EduKita/modules/auth/handler"
	"database/sql"
	"github.com/go-playground/validator"
	"github.com/google/wire"
)

// Injectors from auth_handler.go:

func InitializeAuthHandler(db *sql.DB) *handler.AuthHandler {
	userRepositoryImpl := repositories.NewUserRepository(db)
	usecaseImpl := usecases.NewUsecase(userRepositoryImpl)
	validate := validator.New()
	authHandler := handler.NewAuthHandler(usecaseImpl, validate)
	return authHandler
}

// auth_handler.go:

var AuthHandlerSet = wire.NewSet(repositories.NewUserRepository, wire.Bind(new(repositories.UserRepository), new(*repositories.UserRepositoryImpl)), usecases.NewUsecase, wire.Bind(new(usecases.Usecase), new(*usecases.UsecaseImpl)), validator.New, handler.NewAuthHandler)
